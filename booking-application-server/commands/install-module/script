#!/usr/bin/env bash
#
#/ command: booking-application-server:install-module: "install the booking-application-server rerun module package"
#
#/ usage: rerun booking-application-server:install-module [ --build <false>] [ --release <1>] 
#
#/ rerun env variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option variables: BUILD RELEASE

# Read module function library.
. $RERUN_MODULE_DIR/lib/functions.sh || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

# Error handling
# ---------------
# * Trap calls `rerun_die` with standard message.
# * Exit upon command errors or accessing unset variables.
#   * See [set](http://ss64.com/bash/set.html)
trap 'rerun_die "*** command failed: booking-application-server:install-module. ***"' ERR
set -o nounset -o pipefail

# Parse the command options.
[[ -r $RERUN_MODULE_DIR/commands/install-module/options.sh ]] && {
    . $RERUN_MODULE_DIR/commands/install-module/options.sh || rerun_die "Failed loading options parser."
    rerun_options_parse "$@"
}


# ------------------------------
# Your implementation goes here.
# ------------------------------

if [ "${BUILD}" = true ]
then
   rerun booking-application-server:build-module --release "${RELEASE}"
fi

source $RERUN_MODULE_DIR/metadata

if [ ! -f "${RERUN_MODULES}/rerun-booking-application-server-${VERSION}-${RELEASE}.noarch.rpm" ]
then
   rerun_die "${RERUN_MODULES}/rerun-booking-application-server-${VERSION}-${RELEASE}.noarch.rpm does not exist, cannot install"
fi

rerun rpm:upgrade --package-file "${RERUN_MODULES}/rerun-booking-application-server-${VERSION}-${RELEASE}.noarch.rpm"

echo "installed rerun-booking-application-server-${VERSION}-${RELEASE}"

exit $?

# Done
